{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PrendaService {\n  constructor(http) {\n    //http://localhost:3000/\n    this.http = http;\n    this.myAppUrl = 'http://localhost:3000/';\n    this.myApiUrl = 'api/prendas/';\n  }\n  // Obiente de la interfaces creadas\n  getListPrendas() {\n    return this.http.get(this.myAppUrl + this.myApiUrl);\n  }\n  // Borrar Prenda\n  deletePrenda(id) {\n    return this.http.delete(this.myAppUrl + this.myApiUrl + id);\n  }\n  // Nuevo Prenda n\n  savePrenda(Prenda) {\n    return this.http.post(this.myAppUrl + this.myApiUrl, Prenda);\n  }\n  // Buscar un Prenda\n  getPrenda(id) {\n    return this.http.get(this.myAppUrl + this.myApiUrl + id);\n  }\n  // Actualizar un Prenda\n  putPrenda(id, Prenda) {\n    return this.http.put(this.myAppUrl + this.myApiUrl + id, Prenda);\n  }\n}\n_class = PrendaService;\n_class.ɵfac = function PrendaService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["PrendaService","constructor","http","myAppUrl","myApiUrl","getListPrendas","get","deletePrenda","id","delete","savePrenda","Prenda","post","getPrenda","putPrenda","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["c:\\angular\\prueba\\grupo2\\myapp\\src\\app\\service\\prendas.service.ts"],"sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n//import { environment } from './../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Prenda } from '../interfaces/prenda';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrendaService {\n  private myAppUrl: string;\n  private myApiUrl: string;\n\n  constructor(private http: HttpClient) { \n    //http://localhost:3000/\n        \n    this.myAppUrl = 'http://localhost:3000/'; \n    this.myApiUrl = 'api/prendas/';\n  }\n  // Obiente de la interfaces creadas\n  getListPrendas() : Observable<Prenda[]>{\n    return this.http.get<Prenda[]>(this.myAppUrl+this.myApiUrl);\n  }\n  // Borrar Prenda\n  deletePrenda(id:number): Observable<void>{ \n    return this.http.delete<void>(this.myAppUrl+this.myApiUrl+id);\n  }\n  // Nuevo Prenda n\n  savePrenda(Prenda:Prenda): Observable<void>{\n    return this.http.post<void>(this.myAppUrl+this.myApiUrl, Prenda);\n  }\n  // Buscar un Prenda\n  getPrenda(id: number): Observable<Prenda>{\n    return this.http.get<Prenda>(this.myAppUrl+this.myApiUrl+id);\n  }\n  // Actualizar un Prenda\n  putPrenda(id:number, Prenda:Prenda): Observable<void>{\n    return this.http.put<void>(this.myAppUrl+this.myApiUrl+id, Prenda);\n  }\n}\n\n"],"mappings":";;;AAUA,OAAM,MAAOA,aAAa;EAIxBC,YAAoBC,IAAgB;IAClC;IADkB,KAAAA,IAAI,GAAJA,IAAI;IAGtB,IAAI,CAACC,QAAQ,GAAG,wBAAwB;IACxC,IAAI,CAACC,QAAQ,GAAG,cAAc;EAChC;EACA;EACAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAW,IAAI,CAACH,QAAQ,GAAC,IAAI,CAACC,QAAQ,CAAC;EAC7D;EACA;EACAG,YAAYA,CAACC,EAAS;IACpB,OAAO,IAAI,CAACN,IAAI,CAACO,MAAM,CAAO,IAAI,CAACN,QAAQ,GAAC,IAAI,CAACC,QAAQ,GAACI,EAAE,CAAC;EAC/D;EACA;EACAE,UAAUA,CAACC,MAAa;IACtB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAO,IAAI,CAACT,QAAQ,GAAC,IAAI,CAACC,QAAQ,EAAEO,MAAM,CAAC;EAClE;EACA;EACAE,SAASA,CAACL,EAAU;IAClB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAS,IAAI,CAACH,QAAQ,GAAC,IAAI,CAACC,QAAQ,GAACI,EAAE,CAAC;EAC9D;EACA;EACAM,SAASA,CAACN,EAAS,EAAEG,MAAa;IAChC,OAAO,IAAI,CAACT,IAAI,CAACa,GAAG,CAAO,IAAI,CAACZ,QAAQ,GAAC,IAAI,CAACC,QAAQ,GAACI,EAAE,EAAEG,MAAM,CAAC;EACpE;;SA7BWX,aAAa;;mBAAbA,MAAa,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAbnB,MAAa;EAAAoB,OAAA,EAAbpB,MAAa,CAAAqB,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}